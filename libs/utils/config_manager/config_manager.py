from libs import get_environ
from libs.constants import ProjectFilesLocation, EnvVariables
from libs.utils.config_manager.config_constants import ControllerConfigName, EoSharedConfigName, EvnfmConfigName, \
    SharedCommonConfigName, EvnfmCommonConfigName, CmConfigName, CmCommonConfigName, CapoConfigName, \
    EccdSharedConfigName, EccdConfigName, LmConfigName, LmCommonConfigName
from libs.utils.config_manager.config_reader import ConfigReader

get_env_name = get_environ(EnvVariables.ENV).strip()
controller = get_environ(EnvVariables.CONTROLLER_ENV)


class ControllerConfig:
    def __init__(self, controller_name=controller):
        config = ConfigReader.get_config(ProjectFilesLocation.CONTROLLER(controller_name)).get
        self.controller_name = controller_name
        self.controller_host = config(ControllerConfigName.HOST)
        self.controller_user = config(ControllerConfigName.USER)
        self.controller_pass = config(ControllerConfigName.PASS)


class LmConfig:
    def __init__(self, env_name=get_env_name):
        config = ConfigReader.get_config(ProjectFilesLocation.LM_CONFIG(env_name)).get
        self.openstack_auth_url = config(EoSharedConfigName.OPENSTACK_AUTH_URL)
        self.openstack_user = config(EoSharedConfigName.OPENSTACK_USER)
        self.openstack_pass = config(EoSharedConfigName.OPENSTACK_PASS)
        self.openstack_project_name = config(EoSharedConfigName.OPENSTACK_PROJECT_NAME)
        self.director_ip = config(EoSharedConfigName.DIRECTOR_IP)
        self.director_user = config(EoSharedConfigName.DIRECTOR_USER)
        self.registry_user = config(EoSharedConfigName.REGISTRY_USER)
        self.registry_pass = config(EoSharedConfigName.REGISTRY_PASS)
        self.load_balancer_ip = config(EoSharedConfigName.LOAD_BALANCER_IP)
        self.iam_host = config(LmConfigName.IAM_HOST)
        self.lm_host = config(LmConfigName.LM_HOST)
        self.gas_host = config(LmConfigName.GAS_HOST)
        self.git_host = config(LmConfigName.GIT_HOST)
        self.docker_registry_host = config(LmConfigName.LM_HOST)
        self.is_collocated_env = config(LmConfigName.IS_COLLOCATED_ENV)
        self.registry_size = config(EoSharedConfigName.REGISTRY_SIZE)


class LmCommonConfig:
    def __init__(self):
        config = ConfigReader.get_config(ProjectFilesLocation.LM_COMMON_CONFIG).get
        self.lm_user = config(LmCommonConfigName.LM_USER)
        self.lm_pass = config(LmCommonConfigName.LM_PASS)
        self.crd_namespace = config(SharedCommonConfigName.CRD_NAMESPACE)
        self.kc_admin_id = config(SharedCommonConfigName.KC_ADMIN_ID)
        self.kc_pass = config(SharedCommonConfigName.KC_PASS)
        self.pg_user_id = config(SharedCommonConfigName.PG_USER_ID)
        self.pg_pass = config(SharedCommonConfigName.PG_PASS)
        self.custom_user_id = config(SharedCommonConfigName.CUSTOM_USER_ID)
        self.custom_pass = config(SharedCommonConfigName.CUSTOM_PASS)
        self.super_user_id = config(SharedCommonConfigName.SUPER_USER_ID)
        self.super_pass = config(SharedCommonConfigName.SUPER_PASS)
        self.metrics_user_id = config(SharedCommonConfigName.METRICS_USER_ID)
        self.metrics_pass = config(SharedCommonConfigName.METRICS_PASS)
        self.replica_user_id = config(SharedCommonConfigName.REPLICA_USER_ID)
        self.replica_pass = config(SharedCommonConfigName.REPLICA_PASS)
        self.nels_host_ipv4 = config(SharedCommonConfigName.NELS_HOST_IPV4)
        self.nels_host_ipv6 = config(SharedCommonConfigName.NELS_HOST_IPV6)
        self.eo_reg_user = config(LmCommonConfigName.LM_REG_USER)
        self.eo_reg_pass = config(LmCommonConfigName.LM_REG_PASS)
        self.gas_user = config(SharedCommonConfigName.GAS_USER)
        self.gas_pass = config(SharedCommonConfigName.GAS_PASS)
        self.system_user = config(SharedCommonConfigName.SYSTEM_USER)
        self.system_pass = config(SharedCommonConfigName.SYSTEM_PASS)


class EvnfmConfig:
    def __init__(self, env_name=get_env_name):
        config = ConfigReader.get_config(ProjectFilesLocation.EVNFM_CONFIG(env_name)).get
        self.is_collocated_env = config(EoSharedConfigName.IS_COLLOCATED_ENV)
        self.openstack_auth_url = config(EoSharedConfigName.OPENSTACK_AUTH_URL)
        self.openstack_user = config(EoSharedConfigName.OPENSTACK_USER)
        self.openstack_pass = config(EoSharedConfigName.OPENSTACK_PASS)
        self.openstack_project_name = config(EoSharedConfigName.OPENSTACK_PROJECT_NAME)
        self.director_ip = config(EoSharedConfigName.DIRECTOR_IP)
        self.director_user = config(EoSharedConfigName.DIRECTOR_USER)
        self.registry_user = config(EoSharedConfigName.REGISTRY_USER)
        self.registry_pass = config(EoSharedConfigName.REGISTRY_PASS)
        self.bro_size = config(EoSharedConfigName.BRO_SIZE)
        self.load_balancer_ip = config(EoSharedConfigName.LOAD_BALANCER_IP)
        self.enm_load_balancer_ip = config(EvnfmConfigName.ENM_LOAD_BALANCER_IP)
        self.syslog_ip = config(EoSharedConfigName.SYSLOG_IP)
        self.syslog_port = config(EoSharedConfigName.SYSLOG_PORT)
        self.enms = config(EvnfmConfigName.ENMS)
        self.iam_host = config(EvnfmConfigName.IAM_HOST)
        self.vnfm_host = config(EvnfmConfigName.VNFM_HOST)
        self.gas_host = config(EvnfmConfigName.GAS_HOST)
        self.docker_registry_host = config(EvnfmConfigName.DOCKER_REGISTRY_HOST)
        self.helm_registry_host = config(EvnfmConfigName.HELM_REGISTRY_HOST)
        self.enable_smallstack = config(EvnfmConfigName.ENABLE_SMALLSTACK)
        self.registry_size = config(EoSharedConfigName.REGISTRY_SIZE)
        self.enm_scripting_cluster_ip = config(EvnfmConfigName.ENM_SCRIPTING_CLUSTER_IP)
        self.enm_notification_ip = config(EvnfmConfigName.ENM_NOTIFICATION_IP)
        self.enm_user = config(EvnfmConfigName.ENM_USER)
        self.enm_pass = config(EvnfmConfigName.ENM_PASS)
        self.enm_connection_timeout_in_milliseconds = config(EvnfmConfigName.ENM_CONNECTION_TIMEOUT_IN_MILLISECONDS)
        self.enm_scripting_ssh_port = config(EvnfmConfigName.ENM_SCRIPTING_SSH_PORT)
        self.aat_host = config(EvnfmConfigName.AAT_HOST)
        self.gr_host = config(EvnfmConfigName.GR_HOST)
        self.cluster_role = config(EvnfmConfigName.CLUSTER_ROLE)
        self.secondary_host = config(EvnfmConfigName.SECONDARY_HOST)
        self.sftp_url = config(EvnfmConfigName.SFTP_URL)
        self.sftp_name = config(EvnfmConfigName.SFTP_NAME)
        self.sftp_pass = config(EvnfmConfigName.SFTP_PASS)
        self.storage_class = config(EvnfmConfigName.STORAGE_CLASS)
        self._vnfm_user = config(EvnfmCommonConfigName.VNFM_USER)
        self.send_snmp_alarm = config(EoSharedConfigName.SEND_SNMP_ALARM)


class EvnfmCommonConfig:
    def __init__(self):
        config = ConfigReader.get_config(ProjectFilesLocation.EVNFM_COMMON_CONFIG).get
        self.gas_user = config(SharedCommonConfigName.GAS_USER)
        self.gas_pass = config(SharedCommonConfigName.GAS_PASS)
        self.system_user = config(SharedCommonConfigName.SYSTEM_USER)
        self.system_pass = config(SharedCommonConfigName.SYSTEM_PASS)
        self.crd_namespace = config(SharedCommonConfigName.CRD_NAMESPACE)
        self.kc_admin_id = config(SharedCommonConfigName.KC_ADMIN_ID)
        self.kc_pass = config(SharedCommonConfigName.KC_PASS)
        self.pg_user_id = config(SharedCommonConfigName.PG_USER_ID)
        self.pg_pass = config(SharedCommonConfigName.PG_PASS)
        self.custom_user_id = config(SharedCommonConfigName.CUSTOM_USER_ID)
        self.custom_pass = config(SharedCommonConfigName.CUSTOM_PASS)
        self.super_user_id = config(SharedCommonConfigName.SUPER_USER_ID)
        self.super_pass = config(SharedCommonConfigName.SUPER_PASS)
        self.metrics_user_id = config(SharedCommonConfigName.METRICS_USER_ID)
        self.metrics_pass = config(SharedCommonConfigName.METRICS_PASS)
        self.replica_user_id = config(SharedCommonConfigName.REPLICA_USER_ID)
        self.replica_pass = config(SharedCommonConfigName.REPLICA_PASS)
        self.vnfm_user = config(EvnfmCommonConfigName.VNFM_USER)
        self.vnfm_pass = config(EvnfmCommonConfigName.VNFM_PASS)
        self.eo_reg_user = config(EvnfmCommonConfigName.VNFM_REG_USER)
        self.eo_reg_pass = config(EvnfmCommonConfigName.VNFM_REG_PASS)
        self.helm_auth_user = config(EvnfmCommonConfigName.HELM_AUTH_USER)
        self.helm_auth_pass = config(EvnfmCommonConfigName.HELM_AUTH_PASS)
        self.gr_user = config(EvnfmCommonConfigName.GR_USER)
        self.gr_pass = config(EvnfmCommonConfigName.GR_PASS)
        self.nels_host_ipv4 = config(SharedCommonConfigName.NELS_HOST_IPV4)
        self.nels_host_ipv6 = config(SharedCommonConfigName.NELS_HOST_IPV6)
        self.snmp_server_ip = config(SharedCommonConfigName.SNMP_SERVER_IP)
        self.snmp_community = config(SharedCommonConfigName.SNMP_COMMUNITY)


class CmConfig:
    def __init__(self):
        config = ConfigReader.get_config(ProjectFilesLocation.CM_CONFIG(get_env_name)).get
        self.is_collocated_env = config(EoSharedConfigName.IS_COLLOCATED_ENV)
        self.openstack_auth_url = config(EoSharedConfigName.OPENSTACK_AUTH_URL)
        self.openstack_user = config(EoSharedConfigName.OPENSTACK_USER)
        self.openstack_pass = config(EoSharedConfigName.OPENSTACK_PASS)
        self.openstack_project_name = config(EoSharedConfigName.OPENSTACK_PROJECT_NAME)
        self.director_ip = config(EoSharedConfigName.DIRECTOR_IP)
        self.director_user = config(EoSharedConfigName.DIRECTOR_USER)
        self.registry_user = config(EoSharedConfigName.REGISTRY_USER)
        self.registry_pass = config(EoSharedConfigName.REGISTRY_PASS)
        self.bro_size = config(EoSharedConfigName.BRO_SIZE)
        self.load_balancer_ip = config(EoSharedConfigName.LOAD_BALANCER_IP)
        self.syslog_ip = config(EoSharedConfigName.SYSLOG_IP)
        self.syslog_port = config(EoSharedConfigName.SYSLOG_PORT)
        self.domain_name = config(CmConfigName.DOMAIN_NAME)
        self.esa_lb = config(CmConfigName.ESA_LB)
        self.account = config(CmConfigName.ACCOUNT)
        self.ddpid = config(CmConfigName.DDPID)
        self.enable = config(CmConfigName.ENABLE)
        self.ddp_pass = config(CmConfigName.DDP_PASS)
        self.registry_size = config(EoSharedConfigName.REGISTRY_SIZE)
        self.send_snmp_alarm = config(EoSharedConfigName.SEND_SNMP_ALARM)


class CmCommonConfig:
    def __init__(self):
        config = ConfigReader.get_config(ProjectFilesLocation.CM_COMMON_CONFIG).get
        self.gas_user = config(SharedCommonConfigName.GAS_USER)
        self.gas_pass = config(SharedCommonConfigName.GAS_PASS)
        self.system_user = config(SharedCommonConfigName.SYSTEM_USER)
        self.system_pass = config(SharedCommonConfigName.SYSTEM_PASS)
        self.crd_namespace = config(SharedCommonConfigName.CRD_NAMESPACE)
        self.kc_admin_id = config(SharedCommonConfigName.KC_ADMIN_ID)
        self.kc_pass = config(SharedCommonConfigName.KC_PASS)
        self.pg_user_id = config(SharedCommonConfigName.PG_USER_ID)
        self.pg_pass = config(SharedCommonConfigName.PG_PASS)
        self.custom_user_id = config(SharedCommonConfigName.CUSTOM_USER_ID)
        self.custom_pass = config(SharedCommonConfigName.CUSTOM_PASS)
        self.super_user_id = config(SharedCommonConfigName.SUPER_USER_ID)
        self.super_pass = config(SharedCommonConfigName.SUPER_PASS)
        self.metrics_user_id = config(SharedCommonConfigName.METRICS_USER_ID)
        self.metrics_pass = config(SharedCommonConfigName.METRICS_PASS)
        self.replica_user_id = config(SharedCommonConfigName.REPLICA_USER_ID)
        self.replica_pass = config(SharedCommonConfigName.REPLICA_PASS)
        self.external_traffic_policy = config(CmCommonConfigName.EXTERNAL_TRAFFIC_POLICY)
        self.system_user = config(CmCommonConfigName.SYSTEM_USER)
        self.system_pass = config(CmCommonConfigName.SYSTEM_PASS)
        self.eo_cm_user = config(CmCommonConfigName.EO_CM_USER)
        self.eo_cm_pass = config(CmCommonConfigName.EO_CM_PASS)
        self.cluster_name = config(CmCommonConfigName.CLUSTER_NAME)
        self.eric_eo_cm_broker_pass = config(CmCommonConfigName.ERIC_EO_CM_BROKER_PASS)
        self.eric_eo_cm_dbpass = config(CmCommonConfigName.ERIC_EO_CM_DBPASS)
        self.eric_eo_cm_superpwd = config(CmCommonConfigName.ERIC_EO_CM_SUPERPWD)
        self.db_cmdb_pass = config(CmCommonConfigName.DB_CMDB_PASS)
        self.db_ecm_pass = config(CmCommonConfigName.DB_ECM_PASS)
        self.db_actprovadapter_pass = config(CmCommonConfigName.DB_ACTPROVADAPTER_PASS)
        self.db_eda_pass = config(CmCommonConfigName.DB_EDA_PASS)
        self.eric_eo_cm_ns_lcm_db_pass = config(CmCommonConfigName.ERIC_EO_CM_NS_LCM_DB_PASS)
        self.eric_eo_cm_ns_lcm_db_superpwd = config(CmCommonConfigName.ERIC_EO_CM_NS_LCM_DB_SUPERPWD)
        self.eric_eo_cm_cust_wf_db_pass = config(CmCommonConfigName.ERIC_EO_CM_CUST_WF_DB_PASS)
        self.eric_eo_cm_cust_wf_db_superpwd = config(CmCommonConfigName.ERIC_EO_CM_CUST_WF_DB_SUPERPWD)
        self.eric_eo_cm_order_mgmt_ca_db_pass = config(CmCommonConfigName.ERIC_EO_CM_ORDER_MGMT_CA_DB_PASS)
        self.eric_eo_cm_order_mgmt_ca_db_superpwd = config(CmCommonConfigName.ERIC_EO_CM_ORDER_MGMT_CA_DB_SUPERPWD)
        self.onboard_pass = config(CmCommonConfigName.ONBOARD_PASS)
        self.eoadmin_pass = config(CmCommonConfigName.EOADMIN_PASS)
        self.admin_pass = config(CmCommonConfigName.ADMIN_PASS)
        self.ecmadmin_pass = config(CmCommonConfigName.ECMADMIN_PASS)
        self.ecm_act_pass = config(CmCommonConfigName.ECM_ACT_PASS)
        self.scm_client_id = config(CmCommonConfigName.SCM_CLIENT_ID)
        self.scm_client_secret = config(CmCommonConfigName.SCM_CLIENT_SECRET)
        self.toscaocm_pass = config(CmCommonConfigName.TOSCAOCM_PASS)
        self.toscaocm_superpwd = config(CmCommonConfigName.TOSCAOCM_SUPERPWD)
        self.licence_consumer_db_pass = config(CmCommonConfigName.LICENCE_CONSUMER_DB_PASS)
        self.licence_consumer_db_superpwd = config(CmCommonConfigName.LICENCE_CONSUMER_DB_SUPERPWD)
        self.cmdb_sync_pass = config(CmCommonConfigName.CMDB_SYNC_PASS)
        self.am_pass = config(CmCommonConfigName.AM_PASS)
        self.capi_wl_ns = config(CmCommonConfigName.CAPI_WL_NS)
        self.nels_host_ipv4 = config(SharedCommonConfigName.NELS_HOST_IPV4)
        self.nels_host_ipv6 = config(SharedCommonConfigName.NELS_HOST_IPV6)
        self.snmp_server_ip = config(SharedCommonConfigName.SNMP_SERVER_IP)
        self.snmp_community = config(SharedCommonConfigName.SNMP_COMMUNITY)
        self.cs_am_config_pass = config(CmCommonConfigName.CS_AM_CONFIG_PASS)
        self.cs_ds_pass = config(CmCommonConfigName.CS_DS_PASS)
        self.cs_monitor_pass = config(CmCommonConfigName.CS_MONITOR_PASS)
        self.cts_ds_pass = config(CmCommonConfigName.CTS_DS_PASS)
        self.cts_monitor_pass = config(CmCommonConfigName.CTS_MONITOR_PASS)
        self.cts_openam_pass = config(CmCommonConfigName.CTS_OPENAM_PASS)
        self.ecm_admin_pass = config(CmCommonConfigName.ECM_ADMIN_PASS)
        self.us_ds_pass = config(CmCommonConfigName.US_DS_PASS)
        self.us_monitor_pass = config(CmCommonConfigName.US_MONITOR_PASS)


class CapoConfig:
    def __init__(self):
        config = ConfigReader.get_config(ProjectFilesLocation.CAPO_CONFIG(get_env_name)).get
        self.openstack_auth_url = config(EoSharedConfigName.OPENSTACK_AUTH_URL)
        self.openstack_user = config(EoSharedConfigName.OPENSTACK_USER)
        self.openstack_pass = config(EoSharedConfigName.OPENSTACK_PASS)
        self.openstack_project_name = config(EoSharedConfigName.OPENSTACK_PROJECT_NAME)
        self.openstack_project_id = config(CapoConfigName.OPENSTACK_PROJECT_ID)
        self.api_host = config(EccdSharedConfigName.API_HOST)
        self.reg_host = config(EccdSharedConfigName.REG_HOST)
        self.reg_size = config(EccdSharedConfigName.REGISTRY_STORAGE_SIZE)
        self.peer_address = config(EccdSharedConfigName.PEER_ADDRESS)
        self.peer_asn = config(EccdSharedConfigName.PEER_ASN)
        self.my_asn = config(EccdSharedConfigName.MY_ASN)
        self.address_pools = config(EccdSharedConfigName.ADDRESS_POOLS)
        self.cp_network = config(CapoConfigName.CP_NETWORK)
        self.cp_subnet = config(CapoConfigName.CP_SUBNET)
        self.worker_network = config(EccdSharedConfigName.WORKER_NETWORK)
        self.public_key = config(EccdSharedConfigName.PUBLIC_KEY)


class EccdConfig:
    def __init__(self):
        config = ConfigReader.get_config(ProjectFilesLocation.ECCD_CONFIG(get_env_name)).get
        self.openstack_auth_url = config(EoSharedConfigName.OPENSTACK_AUTH_URL)
        self.openstack_user = config(EoSharedConfigName.OPENSTACK_USER)
        self.openstack_pass = config(EoSharedConfigName.OPENSTACK_PASS)
        self.openstack_project_name = config(EoSharedConfigName.OPENSTACK_PROJECT_NAME)
        self.api_host = config(EccdSharedConfigName.API_HOST)
        self.reg_host = config(EccdSharedConfigName.REG_HOST)
        self.reg_size = config(EccdSharedConfigName.REGISTRY_STORAGE_SIZE)
        self.peer_address = config(EccdSharedConfigName.PEER_ADDRESS)
        self.peer_asn = config(EccdSharedConfigName.PEER_ASN)
        self.my_asn = config(EccdSharedConfigName.MY_ASN)
        self.address_pools = config(EccdSharedConfigName.ADDRESS_POOLS)
        self.worker_network = config(EccdSharedConfigName.WORKER_NETWORK)
        self.worker_subnet = config(EccdSharedConfigName.WORKER_SUBNET)
        self.director_network = config(EccdConfigName.DIRECTOR_NETWORK)
        self.director_subnet = config(EccdConfigName.DIRECTOR_SUBNET)
        self.director_vr_id = config(EccdConfigName.DIRECTOR_VR_ID)
        self.public_key = config(EccdSharedConfigName.PUBLIC_KEY)
